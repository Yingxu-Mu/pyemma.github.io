<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://pyemma.github.io/</id><title>Coding Monkey</title><subtitle>I am a coding monkey, and I am proud of it. I have done lots of work in machine learning area, especially recommendation system and AutoML. This blog summarize my journey to become an expert monkey in distributed system and LLM.</subtitle> <updated>2024-10-08T23:33:32-07:00</updated> <author> <name>Coding Monkey</name> <uri>https://pyemma.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://pyemma.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://pyemma.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator> <rights> © 2024 Coding Monkey </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How Workflow Get Scheduled via Plugins in Flyte</title><link href="https://pyemma.github.io/Flyte-How-Workflow-Get-Scheduled/" rel="alternate" type="text/html" title="How Workflow Get Scheduled via Plugins in Flyte" /><published>2024-09-12T00:00:00-07:00</published> <updated>2024-10-05T16:53:30-07:00</updated> <id>https://pyemma.github.io/Flyte-How-Workflow-Get-Scheduled/</id> <content src="https://pyemma.github.io/Flyte-How-Workflow-Get-Scheduled/" /> <author> <name>pyemma</name> </author> <category term="Distributed System" /> <summary>Reading open source code has been a recommended approach for software engineers to learn. However, in my past 8 years career, I didn’t do a good job on that. After working in a startup for 1 year, I accidentally foster the habit to read open source code XD. In this post, I would like to share one open source project I have been learning recently, and hope you would enjoy this journey as well. ...</summary> </entry> <entry><title>LLM Training 101</title><link href="https://pyemma.github.io/LLM-LLM-Training-101/" rel="alternate" type="text/html" title="LLM Training 101" /><published>2024-09-01T00:00:00-07:00</published> <updated>2024-10-05T16:53:30-07:00</updated> <id>https://pyemma.github.io/LLM-LLM-Training-101/</id> <content src="https://pyemma.github.io/LLM-LLM-Training-101/" /> <author> <name>pyemma</name> </author> <category term="Distributed Training" /> <summary>这个是读完这篇综述 Efficient Training of Large Language Models on Distributed Infrastructures - A Survey 之后的一个产出，这篇综述文章针对 LLM 的 training 介绍的已经很详细了，但是同时内容过多也不可能全都学完。这里针对自己整理的一些笔记来列一个之后学习的提纲，这个提纲肯定是非常主观的，推荐大家去读读原文来根据自己的情况针对性的准备 PS: 后续会不定期的更新这篇 blog 来争取与时俱进，同时会有专栏来介绍这篇 blog 里面打算深入研究的项目 概念性知识 LLM 训练的一些特点 模型架构的一致性，基本都是堆的 transformer, 虽然现在有一些不一样的尝试比如 Mamba 和 TTT, 但是主流的模型还是 transformer ...</summary> </entry> <entry><title>读书笔记 - Patterns of Distributed System</title><link href="https://pyemma.github.io/Book-Pattern-of-Distributed-System/" rel="alternate" type="text/html" title="读书笔记 - Patterns of Distributed System" /><published>2024-07-05T00:00:00-07:00</published> <updated>2024-10-05T16:53:30-07:00</updated> <id>https://pyemma.github.io/Book-Pattern-of-Distributed-System/</id> <content src="https://pyemma.github.io/Book-Pattern-of-Distributed-System/" /> <author> <name>pyemma</name> </author> <category term="Distributed System" /> <summary>最近读了一本和 distributed system 相关的书籍，介绍了在 distributed system 里面常用的一些 pattern. 这是一篇简要的读书笔记，把书中提到的几个 pattern 总结了下来; 我计划会经常更新这篇 blog, 把我新学习到的或者总结出来的一些 pattern 记录在这里; 希望能起到一个引导性的作用，给大家提供一个提纲挈领的思路 Patterns Write Ahead Log 把命令存储到一个 append only file 里面去，当挂了之后可以重新读 WAL 来 rebuild 内部的 state #Message-Queue #KV-Store #持久化 Flushing 来保证命令真的写到 physical media，好处是 persistent，代价就是 performance; 可以使用 batching 等...</summary> </entry> <entry><title>那些年，我们追过的 Feature</title><link href="https://pyemma.github.io/Features-in-Recommendation-System/" rel="alternate" type="text/html" title="那些年，我们追过的 Feature" /><published>2024-06-24T00:00:00-07:00</published> <updated>2024-10-05T16:53:30-07:00</updated> <id>https://pyemma.github.io/Features-in-Recommendation-System/</id> <content src="https://pyemma.github.io/Features-in-Recommendation-System/" /> <author> <name>pyemma</name> </author> <category term="Machine Learning" /> <summary>在今天的 blog 里面，我将结合我前一阵子面试 machine learning engineering 的经验，跟大家唠唠在 ML design 里面的 feature engineering 相关的问题。 在 ML design 里面，我们可能会被问到可以使用什么样的 feature, 以及具体一些 feature 可以被怎么处理以及怎么使用在模型之中。由于我之前主要做的是推荐和广告相关的内容，所以我在这里将主要介绍一下在设计推荐系统的时候，围绕 feature 可以聊的一些点，来给大家提供一些思路，帮大家更好的准备面试 Feature 的种类 在推荐系统里面，我们经常要处理的场景是 给定一个用户和一个物品（以及一些可能的 context），预测用户会喜欢（或者其他的 action）这个物品的概率 基于上面这个简单化的概括（我们在之后会对这个问题进行适当的展开）...</summary> </entry> <entry><title>How to Design Auction System</title><link href="https://pyemma.github.io/How-to-design-auction-system/" rel="alternate" type="text/html" title="How to Design Auction System" /><published>2024-04-06T00:00:00-07:00</published> <updated>2024-10-05T16:53:30-07:00</updated> <id>https://pyemma.github.io/How-to-design-auction-system/</id> <content src="https://pyemma.github.io/How-to-design-auction-system/" /> <author> <name>pyemma</name> </author> <category term="Distributed System" /> <summary>In this post, let’s discuss a little bit how to design an auction system similar to the one on eBay, where owner could list their items in the system and others could place a bid on it. User with highest bid would be the winner of this auction and could buy it. In a real world auction system, there are lots of components involved, such as the search (user could search active auction based on t...</summary> </entry> </feed>
